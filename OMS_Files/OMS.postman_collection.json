{
	"info": {
		"_postman_id": "1fd1b141-9f0b-4ab4-8e63-d3d0a841fd10",
		"name": "OMS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16991074"
	},
	"item": [
		{
			"name": "User",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "Positive test",
							"item": [
								{
									"name": "Login and get token -John Doe",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Token was generated\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"token\");\r",
													"    pm.expect(jsonData.token).to.be.a('string');\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfSwiZXhwIjoxNzQxODg2NTgwfQ.X5quE3rVqcoSDYS_aXorxPbxBpcOOipZyv6b09PZoLk",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"jane.smith@example.com\",\r\n  \"password\": \"Jane2\" \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/login",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"login"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Negative tests",
							"item": [
								{
									"name": "Login and get token - Invalid email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Getting an error message: detail\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"detail\");\r",
													"    pm.expect(jsonData.detail).to.equal(\"Invalid credentials\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfSwiZXhwIjoxNzQxODg2NTgwfQ.X5quE3rVqcoSDYS_aXorxPbxBpcOOipZyv6b09PZoLk",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"johdoe@example.com\",\r\n  \"password\": \"John1\" \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/login",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login and get token - Invalid password",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Getting an error message: detail\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"detail\");\r",
													"    pm.expect(jsonData.detail).to.equal(\"Invalid credentials\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfSwiZXhwIjoxNzQxODg2NTgwfQ.X5quE3rVqcoSDYS_aXorxPbxBpcOOipZyv6b09PZoLk",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"john.doe@example.com\",\r\n  \"password\": \"Joh222n1\" \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/login",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login and get token - Invalid password and email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Getting an error message: detail\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"detail\");\r",
													"    pm.expect(jsonData.detail).to.equal(\"Invalid credentials\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfSwiZXhwIjoxNzQxODg2NTgwfQ.X5quE3rVqcoSDYS_aXorxPbxBpcOOipZyv6b09PZoLk",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"john.doe@example.com11\",\r\n  \"password\": \"Joh222n1\" \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/login",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login and get token - valid password empty email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Getting an error message: detail\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"detail\");\r",
													"    pm.expect(jsonData.detail).to.equal(\"Invalid credentials\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfSwiZXhwIjoxNzQxODg2NTgwfQ.X5quE3rVqcoSDYS_aXorxPbxBpcOOipZyv6b09PZoLk",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"\",\r\n  \"password\": \"John1\" \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/login",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login and get token - empty password correct email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Getting an error message: detail\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"detail\");\r",
													"    pm.expect(jsonData.detail).to.equal(\"Invalid credentials\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfSwiZXhwIjoxNzQxODg2NTgwfQ.X5quE3rVqcoSDYS_aXorxPbxBpcOOipZyv6b09PZoLk",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"john.doe@example.com\",\r\n  \"password\": \"\" \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/login",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login and get token - empty password and email",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Getting an error message: detail\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"detail\");\r",
													"    pm.expect(jsonData.detail).to.equal(\"Invalid credentials\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfSwiZXhwIjoxNzQxODg2NTgwfQ.X5quE3rVqcoSDYS_aXorxPbxBpcOOipZyv6b09PZoLk",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"\",\r\n  \"password\": \"\" \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/login",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"login"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Products",
					"item": [
						{
							"name": "Negative Tests",
							"item": [
								{
									"name": "Get Product by  Invalid ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Product not found message: detail\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"detail\");\r",
													"    pm.expect(jsonData.detail).to.equal(\"Product not found\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/product/hhhh",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"product",
												"hhhh"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Product by  Invalid token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Check status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Authorization header missing\", function () {\r",
													"    pm.response.to.have.jsonBody(\"detail\", \"Invalid token\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXw",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/product/p001",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"product",
												"p001"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Product by  Invalid Path",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Invalid Path, error message: detail\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"detail\");\r",
													"    pm.expect(jsonData.detail).to.equal(\"Not Found\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/product/",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"product",
												""
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Product by  non existing product ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Non existing product ID, error message: detail\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"detail\");\r",
													"    pm.expect(jsonData.detail).to.equal(\"Product not found\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/product/p2333",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"product",
												"p2333"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Positive Tests",
							"item": [
								{
									"name": "Get Product by ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validate data integrity\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"product\");\r",
													"    pm.expect(jsonData.product).to.have.property(\"product_id\");\r",
													"    pm.expect(jsonData.product.product_id).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.product).to.have.property(\"name\");\r",
													"    pm.expect(jsonData.product.name).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.product).to.have.property(\"price\");\r",
													"    pm.expect(jsonData.product.price).to.be.a(\"number\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/product/p001",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"product",
												"p001"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get All Products",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Validate data integrity\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"products\");\r",
													"    pm.expect(jsonData.products[0]).to.have.property(\"product_id\");\r",
													"    pm.expect(jsonData.products[0].product_id).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.products[0]).to.have.property(\"name\");\r",
													"    pm.expect(jsonData.products[0].name).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.products[0]).to.have.property(\"price\");\r",
													"    pm.expect(jsonData.products[0].price).to.be.a(\"number\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/products",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"products"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Cart",
					"item": [
						{
							"name": "Update Cart",
							"item": [
								{
									"name": "Update cart  - Negative tests",
									"item": [
										{
											"name": "Update Cart  - Invalid body structure",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 422\", function () {\r",
															"    pm.response.to.have.status(422);\r",
															"});\r",
															"\r",
															"pm.test(\"Invalid list\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"detail\");\r",
															"    pm.expect(jsonData.detail[0].msg).to.equal(\"Input should be a valid list\");\r",
															"});\r",
															"\r",
															"pm.test(\"Response time is within acceptable range\", function () {\r",
															"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "\r\n    {\"product_id\": \"p001\", \"name\":\"Laptop\",\"quantity\":2}\r\n",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Cart - Invalid product ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Error message\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"detail\");\r",
															"    pm.expect(jsonData.detail).to.equal(\"Invalid product_id: p001???\");\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\"product_id\": \"p001???\", \"name\":\"Laptop\",\"quantity\":2}\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Cart - Invalid token",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Authorization header missing\", function () {\r",
															"    pm.response.to.have.jsonBody(\"detail\", \"Invalid token\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXw",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\"product_id\": \"p001\", \"name\":\"Laptop\",\"quantity\":2}\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Cart - Invalid product quantity, more than maximum",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Quantity validation\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"detail\");\r",
															"    pm.expect(jsonData.detail).to.equal(\"Quantity for product p001 must be between 1 and 10.\");\r",
															"\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\"product_id\": \"p001\", \"name\":\"Laptop\",\"quantity\":1000}\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Cart - Invalid product name",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Error message\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"detail\");\r",
															"    pm.expect(jsonData.detail).to.equal(\"Product name mismatch: Laptoppp\");\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\"product_id\": \"p001\", \"name\":\"Laptoppp\",\"quantity\":2}\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Cart -empty product name",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Error message\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"detail\");\r",
															"    pm.expect(jsonData.detail).to.equal(\"Product name mismatch: \");\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\"product_id\": \"p001\", \"name\":\"\",\"quantity\":2}\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Cart -empty product ID",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Error message\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"detail\");\r",
															"    pm.expect(jsonData.detail).to.equal(\"Invalid product_id: \");\r",
															"\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\"product_id\": \"\", \"name\":\"Laptop\",\"quantity\":2}\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Update cart - Positive tests",
									"item": [
										{
											"name": "Update quantity of an existing product in the cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Vlaidate message\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"message\");\r",
															"    pm.expect(jsonData.message).to.equal(\"Cart updated successfully\");\r",
															"\r",
															"});\r",
															"pm.test(\"Validate data integrity\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"cart\");\r",
															"    pm.expect(jsonData.cart[0]).to.have.property(\"product_id\");\r",
															"    pm.expect(jsonData.cart[0].product_id).to.be.a(\"string\");\r",
															"    pm.expect(jsonData.cart[0]).to.have.property(\"name\");\r",
															"    pm.expect(jsonData.cart[0].name).to.be.a(\"string\");\r",
															"    pm.expect(jsonData.cart[0]).to.have.property(\"price\");\r",
															"    pm.expect(jsonData.cart[0].price).to.be.a(\"number\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n        \"product_id\": \"p001\",\r\n        \"name\": \"Laptop\",\r\n        \"quantity\": 2\r\n    },\r\n    \r\n    {\"product_id\": \"p002\",\r\n     \"name\":\"Mouse\",\r\n     \"quantity\":1\r\n     },\r\n      {\"product_id\": \"p006\",\r\n     \"name\":\"Mousepad\",\r\n     \"quantity\":1\r\n     }\r\n\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add multiple products at once",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Vlaidate message\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"message\");\r",
															"    pm.expect(jsonData.message).to.equal(\"Cart updated successfully\");\r",
															"\r",
															"});\r",
															"pm.test(\"Validate data integrity\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"cart\");\r",
															"    pm.expect(jsonData.cart).to.be.an(\"array\").that.is.not.empty;\r",
															"\r",
															"    jsonData.cart.forEach(item => {\r",
															"        pm.expect(item).to.have.property(\"product_id\").that.is.a(\"string\");\r",
															"        pm.expect(item).to.have.property(\"name\").that.is.a(\"string\");\r",
															"        pm.expect(item).to.have.property(\"quantity\").that.is.a(\"number\").and.above(0);\r",
															"    });\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\r\n    {\r\n    \"product_id\": \"p001\",\r\n    \"name\": \"Laptop\",\r\n    \"quantity\": 2\r\n    },\r\n    \r\n    {\"product_id\": \"p002\",\r\n     \"name\":\"Mouse\",\r\n     \"quantity\":1\r\n     },\r\n      {\"product_id\": \"p006\",\r\n     \"name\":\"Mousepad\",\r\n     \"quantity\":1\r\n     }\r\n\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										},
										{
											"name": "Add a product at maximum quantity",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Vlaidate message\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"message\");\r",
															"    pm.expect(jsonData.message).to.equal(\"Cart updated successfully\");\r",
															"\r",
															"});\r",
															"pm.test(\"Added product with max quantity\", function () {\r",
															"    var response = pm.response.json();\r",
															"    let monitorItem = response.cart.find(item => item.product_id === \"p004\");\r",
															"    pm.expect(monitorItem).to.exist;\r",
															"    pm.expect(monitorItem.quantity).to.equal(10);\r",
															"});"
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\r\n  {\r\n    \"product_id\": \"p004\",\r\n    \"name\": \"Monitor\",\r\n    \"quantity\": 10\r\n  }\r\n]",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Delete",
							"item": [
								{
									"name": "Delete all products",
									"item": [
										{
											"name": "Delete from Cart  - all products",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"All products removed from cart\", function () {\r",
															"    pm.response.to.have.jsonBody(\"message\", \"All products removed from cart\");\r",
															"    pm.response.to.have.jsonBody(\"cart\").that.is.an(\"array\").that.is.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete from Cart  - invalid token",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Authorization header missing\", function () {\r",
															"    pm.response.to.have.jsonBody(\"detail\", \"Invalid token\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXw",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										},
										{
											"name": "Delete from Cart -  From an empty Cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"All products removed from cart\", function () {\r",
															"    var jsonResponse = pm.response.json(); \r",
															"    pm.expect(jsonResponse.message).to.eql(\"All products removed from cart\");  \r",
															"    pm.expect(jsonResponse.cart).to.be.an('array').that.is.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						},
						{
							"name": "Get Cart",
							"item": [
								{
									"name": "Negative Tests",
									"item": [
										{
											"name": "Get Cart - Invalid token",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Check status code is 401\", function () {\r",
															"    pm.response.to.have.status(401);\r",
															"});\r",
															"\r",
															"pm.test(\"Authorization header missing\", function () {\r",
															"    pm.response.to.have.jsonBody(\"detail\", \"Invalid token\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgX",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Positive tests",
									"item": [
										{
											"name": "Get Cart",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Validate data integrity\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"cart\");\r",
															"    pm.expect(jsonData.cart[0]).to.have.property(\"product_id\");\r",
															"    pm.expect(jsonData.cart[0].product_id).to.be.a(\"string\");\r",
															"    pm.expect(jsonData.cart[0]).to.have.property(\"name\");\r",
															"    pm.expect(jsonData.cart[0].name).to.be.a(\"string\");\r",
															"    pm.expect(jsonData.cart[0]).to.have.property(\"price\");\r",
															"    pm.expect(jsonData.cart[0].price).to.be.a(\"number\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										},
										{
											"name": "Get Empty Cart - works only when empty",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Cart is empty\", function () {\r",
															"    var response = pm.response.json();\r",
															"    pm.expect(response.cart).to.be.an(\"array\").that.is.empty;\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"protocolProfileBehavior": {
												"disableBodyPruning": true
											},
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/cart",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"cart"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "Checkout",
					"item": [
						{
							"name": "Checkout  -Cart is full",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/checkout",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"checkout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Checkout  -Cart is empty - need to delete before",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Your test name\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.detail).to.eql(\"Cart is empty\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/checkout",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"checkout"
									]
								}
							},
							"response": []
						},
						{
							"name": "Checkout  -Cart is full - invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Authorization header missing\", function () {\r",
											"    pm.response.to.have.jsonBody(\"detail\", \"Invalid token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXw",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/checkout",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"checkout"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Orders",
					"item": [
						{
							"name": "Get Orders -possible order not found",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status code is 200 or 400\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 400]);\r",
											"});\r",
											"\r",
											"pm.test(\"Check if orders exist\", function () {\r",
											"    var response = pm.response.json();\r",
											"\r",
											"    // If the status is 400, handle the 'No orders found' scenario\r",
											"    if (pm.response.code === 400) {\r",
											"        pm.test(\"No orders found\", function () {\r",
											"            pm.response.to.have.jsonBody(\"detail\", \"No orders found\");\r",
											"        });\r",
											"    } else {\r",
											"        // If the status is 200, check if orders are present\r",
											"        pm.test(\"Order data is present\", function () {\r",
											"            pm.expect(response.orders).to.be.an('array');\r",
											"            if (response.orders.length > 0) {\r",
											"                pm.expect(response.orders[0]).to.have.property('order_id');\r",
											"                \r",
											"            } else {\r",
											"                pm.test(\"No orders found\", function () {\r",
											"                    pm.response.to.have.jsonBody(\"detail\", \"No orders found\");\r",
											"                });\r",
											"            }\r",
											"        });\r",
											"    }\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/orders",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Orders - Invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Authorization header missing\", function () {\r",
											"    pm.response.to.have.jsonBody(\"detail\", \"Invalid token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXw",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/orders",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Order by ID",
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTIzNDU2IiwiZW1haWwiOiJqYW5lLnNtaXRoQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6ZmFsc2V9fQ.fj_rT-jtiBO_paa1Z9ROndPU6ntPqqZMBwFP2I9lyUY",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/orders/1",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"orders",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Order by ID  - Invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status code is 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											"\r",
											"pm.test(\"Authorization header missing\", function () {\r",
											"    pm.response.to.have.jsonBody(\"detail\", \"Invalid token\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpg",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/orders/",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"orders",
										""
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "E2E",
					"item": [
						{
							"name": "Race conditions",
							"item": [
								{
									"name": "Login and get token -jane smith",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Token was generated\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"token\");\r",
													"    pm.expect(jsonData.token).to.be.a('string');\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfSwiZXhwIjoxNzQxODg2NTgwfQ.X5quE3rVqcoSDYS_aXorxPbxBpcOOipZyv6b09PZoLk",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"jane.smith@example.com\",\r\n  \"password\": \"Jane2\" \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/login",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Login and get token -john doe",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Token was generated\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"token\");\r",
													"    pm.expect(jsonData.token).to.be.a('string');\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"email\": \"jane.smith@example.com\",\r\n  \"password\": \"Jane2\" \r\n}\r\n",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/login",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"login"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add new product to cart - Jane",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Vlaidate message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"message\");\r",
													"    pm.expect(jsonData.message).to.equal(\"Cart updated successfully\");\r",
													"\r",
													"});\r",
													"pm.test(\"Validate data integrity\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"cart\");\r",
													"    pm.expect(jsonData.cart[0]).to.have.property(\"product_id\");\r",
													"    pm.expect(jsonData.cart[0].product_id).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.cart[0]).to.have.property(\"name\");\r",
													"    pm.expect(jsonData.cart[0].name).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.cart[0]).to.have.property(\"price\");\r",
													"    pm.expect(jsonData.cart[0].price).to.be.a(\"number\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\"product_id\": \"p001\", \"name\":\"Laptop\",\"quantity\":2}\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/cart",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"cart"
											]
										}
									},
									"response": []
								},
								{
									"name": "Add new product to cart - John",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Vlaidate message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"message\");\r",
													"    pm.expect(jsonData.message).to.equal(\"Cart updated successfully\");\r",
													"\r",
													"});\r",
													"pm.test(\"Validate data integrity\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"cart\");\r",
													"    pm.expect(jsonData.cart[0]).to.have.property(\"product_id\");\r",
													"    pm.expect(jsonData.cart[0].product_id).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.cart[0]).to.have.property(\"name\");\r",
													"    pm.expect(jsonData.cart[0].name).to.be.a(\"string\");\r",
													"    pm.expect(jsonData.cart[0]).to.have.property(\"price\");\r",
													"    pm.expect(jsonData.cart[0].price).to.be.a(\"number\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\r\n    {\"product_id\": \"p007\", \"name\":\"Disc\",\"quantity\":1}\r\n]",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/cart",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"cart"
											]
										}
									},
									"response": []
								},
								{
									"name": "Checkout  Cart - Jane",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTIzNDU2IiwiZW1haWwiOiJqYW5lLnNtaXRoQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6ZmFsc2V9fQ.fj_rT-jtiBO_paa1Z9ROndPU6ntPqqZMBwFP2I9lyUY",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/checkout",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"checkout"
											]
										}
									},
									"response": []
								},
								{
									"name": "Checkout  Cart - John - Failed",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/checkout",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"checkout"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Misc",
					"item": [
						{
							"name": "Get Credit Card - John Doe",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://127.0.0.1:8000/credit_card?name=John Doe",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"credit_card"
									],
									"query": [
										{
											"key": "name",
											"value": "John Doe"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Greetings",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "User tries to get to Admin's Panel",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									"\r",
									"pm.test(\"Getting an error message: detail\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData).to.have.property(\"detail\");\r",
									"    pm.expect(jsonData.detail).to.equal(\"Invalid token\");\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfSwiZXhwIjoxNzQxODg2NTgwfQ.X5quE3rVqcoSDYS_aXorxPbxBpcOOipZyv6b09PZoLk",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://127.0.0.1:8000/panel",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000",
							"path": [
								"panel"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "Login",
					"item": [
						{
							"name": "Panel",
							"item": [
								{
									"name": "Get Panel - Admin",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Welcome message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"     pm.expect(jsonData).to.have.property(\"message\")\r",
													"    pm.expect(jsonData.message).to.eql(\"Welcome to the admin panel OMS Admin Panel, please take care of the pending orders!\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Panel - Invalid token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Welcome message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"     pm.expect(jsonData).to.have.property(\"detail\")\r",
													"    pm.expect(jsonData.detail).to.eql(\"Invalid token\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.sdfg-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Panel - Invalid Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Welcome message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"     pm.expect(jsonData).to.have.property(\"detail\")\r",
													"    pm.expect(jsonData.detail).to.eql(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/panel",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Login Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Token was generated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"token\");\r",
											"    pm.expect(jsonData.token).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Welcome message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"     pm.expect(jsonData).to.have.property(\"message\")\r",
											"    pm.expect(jsonData.message).to.eql(\"Weclome admin! You are redirected to OMS Admin Panel\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfSwiZXhwIjoxNzQxODg2NTgwfQ.X5quE3rVqcoSDYS_aXorxPbxBpcOOipZyv6b09PZoLk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"alice.johnson@example.com\",\r\n  \"password\": \"Admin1\" \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/login",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"login"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Orders",
					"item": [
						{
							"name": "Get all Orders",
							"item": [
								{
									"name": "Get Orders",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Orders  - No orders (delete first all orders)",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check if no orders were found\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    \r",
													"    if (jsonData.orders.length === 0) {\r",
													"        console.log(\"No orders were found.\");\r",
													"        pm.expect(jsonData).to.have.property(\"message\", \"No orders found\");\r",
													"    } else {\r",
													"        console.log(\"Orders exist:\", jsonData.orders);\r",
													"        pm.expect(jsonData.orders).to.be.an(\"array\").that.is.not.empty;\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Orders- Invalid Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Welcome message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"     pm.expect(jsonData).to.have.property(\"detail\")\r",
													"    pm.expect(jsonData.detail).to.eql(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Orders -Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Welcome message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"     pm.expect(jsonData).to.have.property(\"detail\")\r",
													"    pm.expect(jsonData.detail).to.eql(\"Invalid token\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hW",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Orders by ID",
							"item": [
								{
									"name": "Get Order by ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Response structure and item validation\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"\r",
													"    // Validate main response properties\r",
													"    pm.expect(jsonData).to.have.property(\"user_id\").that.is.a(\"string\");\r",
													"    pm.expect(jsonData).to.have.property(\"status\").that.is.a(\"string\");\r",
													"    pm.expect(jsonData).to.have.property(\"items\").that.is.an(\"array\");\r",
													"    pm.expect(jsonData).to.have.property(\"total_price\").that.is.a(\"number\");\r",
													"    pm.expect(jsonData).to.have.property(\"created_at\").that.is.a(\"string\");\r",
													"    pm.expect(jsonData).to.have.property(\"updated_at\").that.is.a(\"string\");\r",
													"\r",
													"    // Validate order items\r",
													"    jsonData.items.forEach(item => {\r",
													"        pm.expect(item).to.have.property(\"product_id\").that.is.a(\"string\");\r",
													"        pm.expect(item).to.have.property(\"name\").that.is.a(\"string\");\r",
													"        pm.expect(item).to.have.property(\"quantity\").that.is.a(\"number\");\r",
													"        pm.expect(item.quantity).to.be.above(0); // Ensure quantity is greater than 0\r",
													"\r",
													"        // Price should exist and be a number if provided\r",
													"        if (item.hasOwnProperty(\"price\")) {\r",
													"            pm.expect(item.price).to.be.a(\"number\");\r",
													"            pm.expect(item.price).to.be.above(0); // Ensure price is positive\r",
													"        }\r",
													"    });\r",
													"});\r",
													"\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/67d3cc5464fb5099c876b80b",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"67d3cc5464fb5099c876b80b"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Order by ID- non existing ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"No orders were found\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData).to.have.property(\"detail\", \"Order not found\");\r",
													"    \r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/67d2a02f0818e36a1e7bda7a",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"67d2a02f0818e36a1e7bda7a"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Orders by ID -Invalid Token",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 401\", function () {\r",
													"    pm.response.to.have.status(401);\r",
													"});\r",
													"\r",
													"pm.test(\"Welcome message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"     pm.expect(jsonData).to.have.property(\"detail\")\r",
													"    pm.expect(jsonData.detail).to.eql(\"Invalid token\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hW",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/67d3cc5464fb5099c876b80b",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"67d3cc5464fb5099c876b80b"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Orders by ID- Invalid Role",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 403\", function () {\r",
													"    pm.response.to.have.status(403);\r",
													"});\r",
													"\r",
													"\r",
													"pm.test(\"Welcome message\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"     pm.expect(jsonData).to.have.property(\"detail\")\r",
													"    pm.expect(jsonData.detail).to.eql(\"Unauthorized\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"protocolProfileBehavior": {
										"disableBodyPruning": true
									},
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfX0.339nYFI1LCNKnDpaZHzutia9m_OnJkADx8THxpgXwwI",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/67d3cc5464fb5099c876b80b",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"67d3cc5464fb5099c876b80b"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Orders by Status",
							"item": [
								{
									"name": "Get Orders by status - Shipped",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check order status is Shipped\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.orders[0].status).to.equal(\"Shipped\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/status/shipped",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"status",
												"shipped"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Orders by status -Non existing status",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Check non existing order status\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.equal(\"Status not found\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/status/shippedddd",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"status",
												"shippedddd"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Orders by status - Pending",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check order status is Pending\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.orders[0].status).to.equal(\"Pending\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/status/pending",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"status",
												"pending"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Orders by status - Delivered",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check order status is Delivered\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.orders[0].status).to.equal(\"Delivered\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/status/delivered",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"status",
												"delivered"
											]
										}
									},
									"response": []
								},
								{
									"name": "Get Orders by status - Processing",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Check order status is Processing\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.orders[0].status).to.equal(\"Processing\");\r",
													"});\r",
													""
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/status/processing",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"status",
												"processing"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Delete Orders",
							"item": [
								{
									"name": "Delete Order by ID - Status Pending",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.contains(\"deleted successfully\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/4",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"4"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Order by ID - Status Delivered",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Verify that Only Pending orders can be deleted\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Only Pending orders can be deleted\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/1",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"1"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Order by ID - Status Shipped",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Verify that Only Pending orders can be deleted\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Only Pending orders can be deleted\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/2",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"2"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Order by ID - Status Processing",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 400\", function () {\r",
													"    pm.response.to.have.status(400);\r",
													"});\r",
													"\r",
													"pm.test(\"Verify that Only Pending orders can be deleted\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Only Pending orders can be deleted\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/3",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"3"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Order by ID- Need To the Delete an order",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Order not found or deleted already\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/4",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"4"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete Order Non existing ID",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 404\", function () {\r",
													"    pm.response.to.have.status(404);\r",
													"});\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.detail).to.eql(\"Order not found or deleted already\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders/121212",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders",
												"121212"
											]
										}
									},
									"response": []
								},
								{
									"name": "Delete ALL Orders",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test(\"Status code is 200\", function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});\r",
													"\r",
													"pm.test(\"Your test name\", function () {\r",
													"    var jsonData = pm.response.json();\r",
													"    pm.expect(jsonData.message).to.contains(\"All\");\r",
													"    pm.expect(jsonData).to.have.property(\"email\");\r",
													"});"
												],
												"type": "text/javascript",
												"packages": {}
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
												"type": "text"
											}
										],
										"url": {
											"raw": "http://127.0.0.1:8000/panel/orders",
											"protocol": "http",
											"host": [
												"127",
												"0",
												"0",
												"1"
											],
											"port": "8000",
											"path": [
												"panel",
												"orders"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Update Order's Status",
							"item": [
								{
									"name": "Pending",
									"item": [
										{
											"name": "Update Status - Pending to - Processing - Need to verify first that order exist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response contains required fields\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData).to.have.property(\"email\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData).to.have.property(\"order\").that.is.a(\"string\");\r",
															"\r",
															"});\r",
															"\r",
															"\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":4,\r\n     \"new_status\":\"Processing\" \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Status - Pending to - Delivered",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response contains required fields\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(jsonData).to.have.property(\"detail\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Invalid status transition: Pending → Delivered.\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Valid next status is: Processing\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":4,\r\n     \"new_status\":\"Delivered\" \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Status - Pending to - Pending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response contains required fields\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(jsonData).to.have.property(\"detail\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Invalid status transition: Pending → Pending\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Valid next status is: Processing\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":4,\r\n     \"new_status\":\"Pending\" \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Status - Pendingto - Shipped",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response contains required fields\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(jsonData).to.have.property(\"detail\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Invalid status transition: Pending → Shipped\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Valid next status is: Processing\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\": 4,\r\n     \"new_status\":\"Shipped\" \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Proseccing",
									"item": [
										{
											"name": "Update Status - Processing to - Shipped - Need to verify first that order exist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response contains required fields\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData).to.have.property(\"order\").that.is.an(\"object\");\r",
															"\r",
															"    var order = jsonData.order;\r",
															"    pm.expect(order).to.have.property(\"_id\").that.is.a(\"string\");\r",
															"    pm.expect(order).to.have.property(\"user_id\").that.is.a(\"string\");\r",
															"    pm.expect(order).to.have.property(\"items\").that.is.an(\"array\");\r",
															"    pm.expect(order).to.have.property(\"total_price\").that.is.a(\"number\");\r",
															"    pm.expect(order).to.have.property(\"status\").that.equals(\"Shipped\");\r",
															"    pm.expect(order).to.have.property(\"created_at\").that.is.a(\"string\");\r",
															"    pm.expect(order).to.have.property(\"updated_at\").that.is.a(\"string\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":3,\r\n     \"new_status\":\"Shipped\" \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Status - Processing to - Processing",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response contains required fields\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(jsonData).to.have.property(\"detail\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Invalid status transition: Processing → Processing\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Valid next status is: Shipped\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":3,\r\n     \"new_status\":\"Processing\" \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Status - Processing to - Pending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response contains required fields\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(jsonData).to.have.property(\"detail\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Invalid status transition: Processing → Pending\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Valid next status is: Shipped\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":3,\r\n     \"new_status\":\"Pending\" \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Status - Processing to - Delivered",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response contains required fields\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(jsonData).to.have.property(\"detail\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Invalid status transition: Processing → Delivered\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Valid next status is: Shipped\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":3,\r\n     \"new_status\":\"Delivered\" \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Shipped",
									"item": [
										{
											"name": "Update Status - Shipped to - Processing",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response contains required fields\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(jsonData).to.have.property(\"detail\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Invalid status transition: Shipped → Processing\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Valid next status is: Delivered\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":2,\r\n     \"new_status\":\"Processing\" \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Status - Shipped to - Shipped",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response contains required fields\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(jsonData).to.have.property(\"detail\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Invalid status transition: Shipped → Shipped\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Valid next status is: Delivered\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":2,\r\n     \"new_status\":\"Shipped\" \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Status - Shipped to - Pending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Response contains required fields\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(jsonData).to.have.property(\"detail\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Invalid status transition: Shipped → Pending\");\r",
															"    pm.expect(jsonData.detail).to.include(\"Valid next status is: Delivered\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":2,\r\n     \"new_status\":\"Pending\" \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Status - Shipped to - Delivered - Need to verify first that order exist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 200\", function () {\r",
															"    pm.response.to.have.status(200);\r",
															"});\r",
															"\r",
															"pm.test(\"Response contains required fields\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"\r",
															"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
															"    pm.expect(jsonData).to.have.property(\"order\").that.is.an(\"object\");\r",
															"\r",
															"    var order = jsonData.order;\r",
															"    pm.expect(order).to.have.property(\"_id\").that.is.a(\"string\");\r",
															"    pm.expect(order).to.have.property(\"user_id\").that.is.a(\"string\");\r",
															"    pm.expect(order).to.have.property(\"items\").that.is.an(\"array\");\r",
															"    pm.expect(order).to.have.property(\"total_price\").that.is.a(\"number\");\r",
															"    pm.expect(order).to.have.property(\"status\").that.equals(\"Delivered\");\r",
															"    pm.expect(order).to.have.property(\"created_at\").that.is.a(\"string\");\r",
															"    pm.expect(order).to.have.property(\"updated_at\").that.is.a(\"string\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":2,\r\n     \"new_status\":\"Delivered\" \r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "Delivered",
									"item": [
										{
											"name": "Update Status - Delivered to - Shipped - Need to verify first that order exist",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Verify that delivered orders cannot be updated\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"detail\");\r",
															"    pm.expect(jsonData.detail).to.eql(\"Order is already delivered and cannot be updated.\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":1,\r\n     \"new_status\":\"Shipped\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Status - Delivered to - Pending",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Verify that delivered orders cannot be updated\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"detail\");\r",
															"    pm.expect(jsonData.detail).to.eql(\"Order is already delivered and cannot be updated.\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":1,\r\n     \"new_status\":\"Pending\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Status - Delivered to - Processing",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Verify that delivered orders cannot be updated\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"detail\");\r",
															"    pm.expect(jsonData.detail).to.eql(\"Order is already delivered and cannot be updated.\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":1,\r\n     \"new_status\":\"Processing\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										},
										{
											"name": "Update Status - Delivered to -Delivered",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test(\"Status code is 400\", function () {\r",
															"    pm.response.to.have.status(400);\r",
															"});\r",
															"\r",
															"pm.test(\"Verify that delivered orders cannot be updated\", function () {\r",
															"    var jsonData = pm.response.json();\r",
															"    pm.expect(jsonData).to.have.property(\"detail\");\r",
															"    pm.expect(jsonData.detail).to.eql(\"Order is already delivered and cannot be updated.\");\r",
															"});\r",
															""
														],
														"type": "text/javascript",
														"packages": {}
													}
												}
											],
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"order_id\":1,\r\n     \"new_status\":\"Delivered\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "http://127.0.0.1:8000/panel/orders/update-status",
													"protocol": "http",
													"host": [
														"127",
														"0",
														"0",
														"1"
													],
													"port": "8000",
													"path": [
														"panel",
														"orders",
														"update-status"
													]
												}
											},
											"response": []
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "E2E",
					"item": [
						{
							"name": "Login Admin",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Token was generated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"token\");\r",
											"    pm.expect(jsonData.token).to.be.a('string');\r",
											"});\r",
											"\r",
											"pm.test(\"Welcome message\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"     pm.expect(jsonData).to.have.property(\"message\")\r",
											"    pm.expect(jsonData.message).to.eql(\"Weclome admin! You are redirected to OMS Admin Panel\");\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTEyMzQ1IiwiZW1haWwiOiJqb2huLmRvZUBleGFtcGxlLmNvbSIsInJvbGUiOnsiaXNfYWRtaW4iOmZhbHNlfSwiZXhwIjoxNzQxODg2NTgwfQ.X5quE3rVqcoSDYS_aXorxPbxBpcOOipZyv6b09PZoLk",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"email\": \"alice.johnson@example.com\",\r\n  \"password\": \"Admin1\" \r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/login",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Orders",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
										"type": "text"
									}
								],
								"url": {
									"raw": "http://127.0.0.1:8000/panel/orders",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"panel",
										"orders"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Status - Pending to - Processing - Need to verify first that order exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains required fields\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"order\").that.is.an(\"object\");\r",
											"\r",
											"    var order = jsonData.order;\r",
											"    pm.expect(order).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"    pm.expect(order).to.have.property(\"user_id\").that.is.a(\"string\");\r",
											"    pm.expect(order).to.have.property(\"items\").that.is.an(\"array\");\r",
											"    pm.expect(order).to.have.property(\"total_price\").that.is.a(\"number\");\r",
											"    pm.expect(order).to.have.property(\"status\").that.equals(\"Processing\");\r",
											"    pm.expect(order).to.have.property(\"created_at\").that.is.a(\"string\");\r",
											"    pm.expect(order).to.have.property(\"updated_at\").that.is.a(\"string\");\r",
											"});\r",
											"\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"order_id\":4,\r\n     \"new_status\":\"Processing\" \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/panel/orders/update-status",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"panel",
										"orders",
										"update-status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Status - Processing to - Shipped - Need to verify first that order exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains required fields\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"order\").that.is.an(\"object\");\r",
											"\r",
											"    var order = jsonData.order;\r",
											"    pm.expect(order).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"    pm.expect(order).to.have.property(\"user_id\").that.is.a(\"string\");\r",
											"    pm.expect(order).to.have.property(\"items\").that.is.an(\"array\");\r",
											"    pm.expect(order).to.have.property(\"total_price\").that.is.a(\"number\");\r",
											"    pm.expect(order).to.have.property(\"status\").that.equals(\"Shipped\");\r",
											"    pm.expect(order).to.have.property(\"created_at\").that.is.a(\"string\");\r",
											"    pm.expect(order).to.have.property(\"updated_at\").that.is.a(\"string\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"order_id\":4,\r\n     \"new_status\":\"Shipped\" \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/panel/orders/update-status",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"panel",
										"orders",
										"update-status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Status - Shipped to - Delivered - Need to verify first that order exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Response contains required fields\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"\r",
											"    pm.expect(jsonData).to.have.property(\"message\").that.is.a(\"string\");\r",
											"    pm.expect(jsonData).to.have.property(\"order\").that.is.an(\"object\");\r",
											"\r",
											"    var order = jsonData.order;\r",
											"    pm.expect(order).to.have.property(\"_id\").that.is.a(\"string\");\r",
											"    pm.expect(order).to.have.property(\"user_id\").that.is.a(\"string\");\r",
											"    pm.expect(order).to.have.property(\"items\").that.is.an(\"array\");\r",
											"    pm.expect(order).to.have.property(\"total_price\").that.is.a(\"number\");\r",
											"    pm.expect(order).to.have.property(\"status\").that.equals(\"Delivered\");\r",
											"    pm.expect(order).to.have.property(\"created_at\").that.is.a(\"string\");\r",
											"    pm.expect(order).to.have.property(\"updated_at\").that.is.a(\"string\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"order_id\":4,\r\n     \"new_status\":\"Delivered\" \r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/panel/orders/update-status",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"panel",
										"orders",
										"update-status"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Status - Delivered to - None - Need to verify first that order exist",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify that delivered orders cannot be updated\", function () {\r",
											"    var jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.have.property(\"detail\");\r",
											"    pm.expect(jsonData.detail).to.eql(\"Order is already delivered and cannot be updated.\");\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidTM0NTY3IiwiZW1haWwiOiJhbGljZS5qb2huc29uQGV4YW1wbGUuY29tIiwicm9sZSI6eyJpc19hZG1pbiI6dHJ1ZX19.7vq6_QKcHJANIwFw_50-AOcLZISrCLvxXFmhhB5hWeA",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"order_id\":4,\r\n     \"new_status\":\"Shipped\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://127.0.0.1:8000/panel/orders/update-status",
									"protocol": "http",
									"host": [
										"127",
										"0",
										"0",
										"1"
									],
									"port": "8000",
									"path": [
										"panel",
										"orders",
										"update-status"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Greetings",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://127.0.0.1:8000",
							"protocol": "http",
							"host": [
								"127",
								"0",
								"0",
								"1"
							],
							"port": "8000"
						}
					},
					"response": []
				}
			]
		}
	]
}